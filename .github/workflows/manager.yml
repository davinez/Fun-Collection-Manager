name: Manager API Build and Test

on:
  push:
    paths:
      - 'src/Manager/**'
      - 'tests/Manager.IntegrationTests/**'
    branches:    
      - main
      - release/*

  pull_request:
    paths:
      - 'src/Manager/**'
      - 'tests/Manager.IntegrationTests/**'
    branches:    
      - main
      - release/*
  
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  GITHUB_USERNAME: ${{ github.repository_owner }}
  IMAGE_NAME: manager-support-api

jobs:
 # Id of the job (random string)
 build-and-push-manager-image:
    runs-on: ubuntu-latest
    defaults:
          run:
            working-directory: './'

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}       

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${{ github.sha }} | cut -c1-8`" >> $GITHUB_ENV

      # If using variable ${{ github.repository }} => The owner and repository name. For example, octocat/Hello-World
      - name: 'Build, tag, and push image to GitHub Container Registry (Packages)'
        # > called a Folded Block Scalar which converts new lines into spaces
        run: >
          docker build
          --tag ${{ env.REGISTRY }}/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${SHORT_SHA} 
          -f src/Manager/Manager.API
          .
          docker push ${{ env.REGISTRY }}/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${SHORT_SHA}

    # - uses: actions/checkout@v2
    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: '8.0.x'
    #     include-prerelease: true

    # - name: Build with dotnet
    #   run: dotnet build ./eShopOnWeb.sln --configuration Release
    
    # - name: Test with dotnet
    #   run: dotnet test ./eShopOnWeb.sln --configuration Release



